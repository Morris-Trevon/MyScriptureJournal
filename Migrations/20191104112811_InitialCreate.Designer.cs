// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyScriptureJournal.Data;

namespace MyScriptureJournal.Migrations
{
    [DbContext(typeof(JournalContext))]
    [Migration("20191104112811_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyScriptureJournal.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ProphetID")
                        .HasColumnType("int");

                    b.Property<int?>("RevelatorProphetID")
                        .HasColumnType("int");

                    b.HasKey("CityID");

                    b.HasIndex("RevelatorProphetID");

                    b.ToTable("City");
                });

            modelBuilder.Entity("MyScriptureJournal.Models.DispensationLinks", b =>
                {
                    b.Property<int>("ReferenceID")
                        .HasColumnType("int");

                    b.Property<int>("ProphetID")
                        .HasColumnType("int");

                    b.HasKey("ReferenceID", "ProphetID");

                    b.HasIndex("ProphetID");

                    b.ToTable("DispensationLinks");
                });

            modelBuilder.Entity("MyScriptureJournal.Models.Journal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JournalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.HasKey("ID");

                    b.ToTable("Journal");
                });

            modelBuilder.Entity("MyScriptureJournal.Models.Note", b =>
                {
                    b.Property<int>("NoteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Canon")
                        .HasColumnType("int");

                    b.Property<int>("JournalID")
                        .HasColumnType("int");

                    b.Property<int>("ReferenceID")
                        .HasColumnType("int");

                    b.HasKey("NoteID");

                    b.HasIndex("JournalID");

                    b.HasIndex("ReferenceID");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("MyScriptureJournal.Models.PriesthoodOffice", b =>
                {
                    b.Property<int>("ProphetID")
                        .HasColumnType("int");

                    b.Property<string>("priesthoodOffice")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProphetID");

                    b.ToTable("PriesthoodOffice");
                });

            modelBuilder.Entity("MyScriptureJournal.Models.Prophets", b =>
                {
                    b.Property<int>("ProphetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DispDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProphetID");

                    b.ToTable("Prophet");
                });

            modelBuilder.Entity("MyScriptureJournal.Models.Reference", b =>
                {
                    b.Property<int>("ReferenceID")
                        .HasColumnType("int");

                    b.Property<string>("ChapterAndVerse")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("SpiritualNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.HasKey("ReferenceID");

                    b.HasIndex("CityId");

                    b.ToTable("Reference");
                });

            modelBuilder.Entity("MyScriptureJournal.Models.City", b =>
                {
                    b.HasOne("MyScriptureJournal.Models.Prophets", "Revelator")
                        .WithMany()
                        .HasForeignKey("RevelatorProphetID");
                });

            modelBuilder.Entity("MyScriptureJournal.Models.DispensationLinks", b =>
                {
                    b.HasOne("MyScriptureJournal.Models.Prophets", "Prophet")
                        .WithMany("dispensationLinks")
                        .HasForeignKey("ProphetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyScriptureJournal.Models.Reference", "References")
                        .WithMany("dispensationLinks")
                        .HasForeignKey("ReferenceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScriptureJournal.Models.Note", b =>
                {
                    b.HasOne("MyScriptureJournal.Models.Journal", "Journal")
                        .WithMany("Notes")
                        .HasForeignKey("JournalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyScriptureJournal.Models.Reference", "Reference")
                        .WithMany("Notes")
                        .HasForeignKey("ReferenceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScriptureJournal.Models.PriesthoodOffice", b =>
                {
                    b.HasOne("MyScriptureJournal.Models.Prophets", "Prophet")
                        .WithOne("priestHoodOffice")
                        .HasForeignKey("MyScriptureJournal.Models.PriesthoodOffice", "ProphetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScriptureJournal.Models.Reference", b =>
                {
                    b.HasOne("MyScriptureJournal.Models.City", "City")
                        .WithMany("References")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
